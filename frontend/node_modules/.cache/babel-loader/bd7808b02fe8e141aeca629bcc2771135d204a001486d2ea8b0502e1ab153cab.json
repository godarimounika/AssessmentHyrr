{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mouni\\\\OneDrive\\\\Desktop\\\\hyrrassessment\\\\frontend\\\\src\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostList() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const fetchPosts = async () => {\n    // try {\n    //   const response = await fetch(`/api/posts?page=${page}`, {\n    //     headers: {\n    //       Authorization: 'Bearer YOUR_ACCESS_TOKEN', // Include authentication token\n    //     },\n\n    try {\n      const accessToken = localStorage.getItem('accessToken');\n      const response = await fetch('http://localhost:3001/api/posts?page=${page}', {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch posts');\n      }\n      const data = await response.json();\n      console.log('Fetched data:', data);\n      setPosts(prevPosts => [...prevPosts, ...data.posts]);\n      setPage(prevPage => prevPage + 1);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching posts:', error.message);\n    }\n  };\n  const handleScroll = () => {\n    if (window.innerHeight + document.documentElement.scrollTop === document.documentElement.offsetHeight) {\n      setLoading(true);\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n  useEffect(() => {\n    if (loading) {\n      fetchPosts();\n    }\n  }, [loading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto mt-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 shadow-md rounded-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-2\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(PostList, \"vnY1t2sVX/Py6fY5gLvJOU1H/nw=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PostList","_s","posts","setPosts","page","setPage","loading","setLoading","fetchPosts","accessToken","localStorage","getItem","response","fetch","headers","Authorization","ok","Error","data","json","console","log","prevPosts","prevPage","error","message","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","addEventListener","removeEventListener","className","children","map","post","title","fileName","_jsxFileName","lineNumber","columnNumber","body","id","_c","$RefreshReg$"],"sources":["C:/Users/mouni/OneDrive/Desktop/hyrrassessment/frontend/src/PostList.js"],"sourcesContent":["import React,{ useState, useEffect } from 'react'\r\n\r\nfunction PostList() {\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchPosts = async () => {\r\n    // try {\r\n    //   const response = await fetch(`/api/posts?page=${page}`, {\r\n    //     headers: {\r\n    //       Authorization: 'Bearer YOUR_ACCESS_TOKEN', // Include authentication token\r\n    //     },\r\n\r\n    try {\r\n      const accessToken = localStorage.getItem('accessToken');\r\n      const response = await fetch('http://localhost:3001/api/posts?page=${page}', {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch posts');\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('Fetched data:', data);\r\n      setPosts((prevPosts) => [...prevPosts, ...data.posts]);\r\n      setPage((prevPage) => prevPage + 1);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching posts:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleScroll = () => {\r\n    if (\r\n      window.innerHeight + document.documentElement.scrollTop ===\r\n      document.documentElement.offsetHeight\r\n    ) {\r\n      setLoading(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      fetchPosts();\r\n    }\r\n  }, [loading]);\r\n\r\n  return (\r\n    <div className=\"container mx-auto mt-8\">\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n        {posts.map((post) => (\r\n          <div key={post.id} className=\"bg-white p-4 shadow-md rounded-md\">\r\n            {/* Display your post content here */}\r\n            <h2 className=\"text-xl font-bold mb-2\">{post.title}</h2>\r\n            <p className=\"text-gray-600\">{post.body}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostList"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}