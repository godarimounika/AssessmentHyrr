{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mouni\\\\OneDrive\\\\Desktop\\\\hyrrassessment\\\\frontend\\\\src\\\\PostList.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n\n// function PostList() {\n//   const [posts, setPosts] = useState([]);\n//   const [page, setPage] = useState(1);\n\n//   const fetchPosts = async () => {\n//     try {\n//       const response = await fetch(`http://localhost:3001/api/posts?page=${page}`, {\n//         method: 'GET',\n//         headers: {\n//           'Content-Type': 'application/json',\n//           // You can add an authentication header if needed\n//           // 'Authorization': 'Bearer YOUR_ACCESS_TOKEN',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Failed to fetch posts');\n//       }\n\n//       const data = await response.json();\n//       setPosts((prevPosts) => [...prevPosts, ...data.posts]);\n//     } catch (error) {\n//       console.error('Error fetching posts:', error.message);\n//     }\n//   };\n\n//   useEffect(() => {\n//     // Fetch posts when the component mounts\n//     fetchPosts();\n//   }, [page]); // Fetch posts whenever the page changes\n\n//   return (\n\n//   <div className=\"bg-gray-100 min-h-screen font-sans\">\n//   <div className=\"container mx-auto p-8\">\n//     <h1 className=\"text-4xl font-bold text-blue-500 mb-8 text-center\">PostList</h1>\n//     <ul>\n//       {posts.map((post) => (\n//         <li key={post._id} className=\"mb-4 p-6 bg-white rounded-md shadow-md\">\n//           <h2 className=\"text-2xl font-semibold text-gray-800 mb-4\">{post.title}</h2>\n//           <p className=\"text-gray-600\">{post.body}</p>\n//         </li>\n//       ))}\n//     </ul>\n//     <button\n//       onClick={() => setPage((prevPage) => prevPage + 1)}\n//       className=\"bg-blue-500 text-white px-4 py-2 mt-8 rounded hover:bg-blue-600 focus:outline-none focus:shadow-outline\"\n//     >\n//       Load More\n//     </button>\n//   </div>\n// </div>\n//   );\n// }\n\n// export default PostList;\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostList() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [page, setPage] = useState(1);\n  const fetchPosts = async () => {\n    try {\n      const response = await fetch(`https://fakestoreapi.com/products?page=${page}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n          // You can add an authentication header if needed\n          // 'Authorization': 'Bearer YOUR_ACCESS_TOKEN',\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch posts');\n      }\n      const data = await response.json();\n      setPosts(prevPosts => [...prevPosts, ...data]);\n    } catch (error) {\n      console.error('Error fetching posts:', error.message);\n    }\n  };\n  useEffect(() => {\n    // Fetch posts when the component mounts\n    fetchPosts();\n  }, [page]); // Fetch posts whenever the page changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100 min-h-screen font-sans\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto p-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold text-blue-500 mb-8 text-center\",\n        children: \"PostList\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"mb-4 p-6 bg-white rounded-md shadow-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold text-gray-800 mb-4\",\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.image,\n            alt: post.title,\n            className: \"mb-4 rounded-md\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600\",\n            children: post.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(prevPage => prevPage + 1),\n        className: \"bg-blue-500 text-white px-4 py-2 mt-8 rounded hover:bg-blue-600 focus:outline-none focus:shadow-outline\",\n        children: \"Load More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(PostList, \"S+lycjOwIZhAbG4fwTPtDkTcJ2Q=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PostList","_s","posts","setPosts","page","setPage","fetchPosts","response","fetch","method","headers","ok","Error","data","json","prevPosts","error","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","title","src","image","alt","description","id","onClick","prevPage","_c","$RefreshReg$"],"sources":["C:/Users/mouni/OneDrive/Desktop/hyrrassessment/frontend/src/PostList.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n\r\n// function PostList() {\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [page, setPage] = useState(1);\r\n\r\n//   const fetchPosts = async () => {\r\n//     try {\r\n//       const response = await fetch(`http://localhost:3001/api/posts?page=${page}`, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//           // You can add an authentication header if needed\r\n//           // 'Authorization': 'Bearer YOUR_ACCESS_TOKEN',\r\n//         },\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error('Failed to fetch posts');\r\n//       }\r\n\r\n//       const data = await response.json();\r\n//       setPosts((prevPosts) => [...prevPosts, ...data.posts]);\r\n//     } catch (error) {\r\n//       console.error('Error fetching posts:', error.message);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     // Fetch posts when the component mounts\r\n//     fetchPosts();\r\n//   }, [page]); // Fetch posts whenever the page changes\r\n\r\n//   return (\r\n   \r\n\r\n//   <div className=\"bg-gray-100 min-h-screen font-sans\">\r\n//   <div className=\"container mx-auto p-8\">\r\n//     <h1 className=\"text-4xl font-bold text-blue-500 mb-8 text-center\">PostList</h1>\r\n//     <ul>\r\n//       {posts.map((post) => (\r\n//         <li key={post._id} className=\"mb-4 p-6 bg-white rounded-md shadow-md\">\r\n//           <h2 className=\"text-2xl font-semibold text-gray-800 mb-4\">{post.title}</h2>\r\n//           <p className=\"text-gray-600\">{post.body}</p>\r\n//         </li>\r\n//       ))}\r\n//     </ul>\r\n//     <button\r\n//       onClick={() => setPage((prevPage) => prevPage + 1)}\r\n//       className=\"bg-blue-500 text-white px-4 py-2 mt-8 rounded hover:bg-blue-600 focus:outline-none focus:shadow-outline\"\r\n//     >\r\n//       Load More\r\n//     </button>\r\n//   </div>\r\n// </div>\r\n//   );\r\n// }\r\n\r\n// export default PostList;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction PostList() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n\r\n  const fetchPosts = async () => {\r\n    try {\r\n      const response = await fetch(`https://fakestoreapi.com/products?page=${page}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          // You can add an authentication header if needed\r\n          // 'Authorization': 'Bearer YOUR_ACCESS_TOKEN',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch posts');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setPosts((prevPosts) => [...prevPosts, ...data]);\r\n    } catch (error) {\r\n      console.error('Error fetching posts:', error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch posts when the component mounts\r\n    fetchPosts();\r\n  }, [page]); // Fetch posts whenever the page changes\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 min-h-screen font-sans\">\r\n      <div className=\"container mx-auto p-8\">\r\n        <h1 className=\"text-4xl font-bold text-blue-500 mb-8 text-center\">PostList</h1>\r\n        <ul>\r\n          {posts.map((post) => (\r\n            <li key={post.id} className=\"mb-4 p-6 bg-white rounded-md shadow-md\">\r\n              <h2 className=\"text-2xl font-semibold text-gray-800 mb-4\">{post.title}</h2>\r\n              <img src={post.image} alt={post.title} className=\"mb-4 rounded-md\" />\r\n              <p className=\"text-gray-600\">{post.description}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <button\r\n          onClick={() => setPage((prevPage) => prevPage + 1)}\r\n          className=\"bg-blue-500 text-white px-4 py-2 mt-8 rounded hover:bg-blue-600 focus:outline-none focus:shadow-outline\"\r\n        >\r\n          Load More\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}