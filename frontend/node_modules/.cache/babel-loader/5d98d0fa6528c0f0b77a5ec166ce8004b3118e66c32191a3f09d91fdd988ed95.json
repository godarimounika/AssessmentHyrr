{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mouni\\\\OneDrive\\\\Desktop\\\\hyrrassessment\\\\frontend\\\\src\\\\PostList.js\",\n  _s = $RefreshSig$();\n// import React,{ useState, useEffect } from 'react'\n\n// function PostList() {\n\n//   const [posts, setPosts] = useState([]);\n//   const [page, setPage] = useState(1);\n//   const [loading, setLoading] = useState(false);\n\n//   const fetchPosts = async () => {\n//     // try {\n//     //   const response = await fetch(`/api/posts?page=${page}`, {\n//     //     headers: {\n//     //       Authorization: 'Bearer YOUR_ACCESS_TOKEN', // Include authentication token\n//     //     },\n\n//     try {\n//       const accessToken = localStorage.getItem('accessToken');\n//       const response = await fetch(`http://localhost:3001/api/posts?page=${page}`, {\n//         headers: {\n//           Authorization: `Bearer ${accessToken}`,\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Failed to fetch posts');\n//       }\n\n//       const data = await response.json();\n//       console.log('Fetched data:', data);\n//       setPosts((prevPosts) => [...prevPosts, ...data.posts]);\n//       setPage((prevPage) => prevPage + 1);\n//       setLoading(false);\n//     } catch (error) {\n//       console.error('Error fetching posts:', error.message);\n//     }\n//   };\n\n//   const handleScroll = () => {\n//     if (\n//       window.innerHeight + document.documentElement.scrollTop ===\n//       document.documentElement.offsetHeight\n//     ) {\n//       setLoading(true);\n//     }\n//   };\n\n//   useEffect(() => {\n//     window.addEventListener('scroll', handleScroll);\n//     return () => window.removeEventListener('scroll', handleScroll);\n//   }, []);\n\n//   useEffect(() => {\n//     if (loading) {\n//       fetchPosts();\n//     }\n//   }, [loading]);\n\n//   return (\n//     <div className=\"container mx-auto mt-8\">\n//       <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8\">\n//         {posts.map((post) => (\n//           <div key={post.id} className=\"bg-white p-4 shadow-md rounded-md\">\n//             {/* Display your post content here */}\n//             <h2 className=\"text-xl font-bold mb-2\">{post.title}</h2>\n//             <p className=\"text-gray-600\">{post.body}</p>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   )\n// }\n\n// export default PostList\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostList() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const fetchPosts = async () => {\n    try {\n      const accessToken = localStorage.getItem('accessToken');\n      const response = await axios.get(`http://localhost:3001/api/posts?page=${page}`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      if (!response.data) {\n        throw new Error('Failed to fetch posts');\n      }\n      const data = response.data;\n      setPosts(prevPosts => [...prevPosts, ...data.posts]);\n      setPage(prevPage => prevPage + 1);\n    } catch (error) {\n      console.error('Error fetching posts:', error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleScroll = () => {\n    const {\n      scrollTop,\n      clientHeight,\n      scrollHeight\n    } = document.documentElement;\n\n    // Check if the user has scrolled to the bottom of the page\n    if (scrollTop + clientHeight >= scrollHeight - 100 && !loading) {\n      setLoading(true);\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n\n    // Cleanup the event listener when the component unmounts\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  useEffect(() => {\n    if (loading) {\n      fetchPosts();\n    }\n  }, [loading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto mt-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 shadow-md rounded-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-2\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(PostList, \"vnY1t2sVX/Py6fY5gLvJOU1H/nw=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PostList","_s","posts","setPosts","page","setPage","loading","setLoading","fetchPosts","accessToken","localStorage","getItem","response","get","headers","Authorization","data","Error","prevPosts","prevPage","error","console","message","handleScroll","scrollTop","clientHeight","scrollHeight","document","documentElement","window","addEventListener","removeEventListener","className","children","map","post","title","fileName","_jsxFileName","lineNumber","columnNumber","body","id","_c","$RefreshReg$"],"sources":["C:/Users/mouni/OneDrive/Desktop/hyrrassessment/frontend/src/PostList.js"],"sourcesContent":["// import React,{ useState, useEffect } from 'react'\r\n\r\n// function PostList() {\r\n\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [page, setPage] = useState(1);\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   const fetchPosts = async () => {\r\n//     // try {\r\n//     //   const response = await fetch(`/api/posts?page=${page}`, {\r\n//     //     headers: {\r\n//     //       Authorization: 'Bearer YOUR_ACCESS_TOKEN', // Include authentication token\r\n//     //     },\r\n\r\n//     try {\r\n//       const accessToken = localStorage.getItem('accessToken');\r\n//       const response = await fetch(`http://localhost:3001/api/posts?page=${page}`, {\r\n//         headers: {\r\n//           Authorization: `Bearer ${accessToken}`,\r\n//         },\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error('Failed to fetch posts');\r\n//       }\r\n\r\n//       const data = await response.json();\r\n//       console.log('Fetched data:', data);\r\n//       setPosts((prevPosts) => [...prevPosts, ...data.posts]);\r\n//       setPage((prevPage) => prevPage + 1);\r\n//       setLoading(false);\r\n//     } catch (error) {\r\n//       console.error('Error fetching posts:', error.message);\r\n//     }\r\n//   };\r\n\r\n//   const handleScroll = () => {\r\n//     if (\r\n//       window.innerHeight + document.documentElement.scrollTop ===\r\n//       document.documentElement.offsetHeight\r\n//     ) {\r\n//       setLoading(true);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     window.addEventListener('scroll', handleScroll);\r\n//     return () => window.removeEventListener('scroll', handleScroll);\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (loading) {\r\n//       fetchPosts();\r\n//     }\r\n//   }, [loading]);\r\n\r\n//   return (\r\n//     <div className=\"container mx-auto mt-8\">\r\n//       <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n//         {posts.map((post) => (\r\n//           <div key={post.id} className=\"bg-white p-4 shadow-md rounded-md\">\r\n//             {/* Display your post content here */}\r\n//             <h2 className=\"text-xl font-bold mb-2\">{post.title}</h2>\r\n//             <p className=\"text-gray-600\">{post.body}</p>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default PostList\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction PostList() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchPosts = async () => {\r\n    try {\r\n      const accessToken = localStorage.getItem('accessToken');\r\n      const response = await axios.get(`http://localhost:3001/api/posts?page=${page}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      });\r\n\r\n      if (!response.data) {\r\n        throw new Error('Failed to fetch posts');\r\n      }\r\n\r\n      const data = response.data;\r\n      setPosts((prevPosts) => [...prevPosts, ...data.posts]);\r\n      setPage((prevPage) => prevPage + 1);\r\n    } catch (error) {\r\n      console.error('Error fetching posts:', error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleScroll = () => {\r\n    const { scrollTop, clientHeight, scrollHeight } = document.documentElement;\r\n\r\n    // Check if the user has scrolled to the bottom of the page\r\n    if (scrollTop + clientHeight >= scrollHeight - 100 && !loading) {\r\n      setLoading(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    // Cleanup the event listener when the component unmounts\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      fetchPosts();\r\n    }\r\n  }, [loading]);\r\n\r\n  return (\r\n    <div className=\"container mx-auto mt-8\">\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n        {posts.map((post) => (\r\n          <div key={post.id} className=\"bg-white p-4 shadow-md rounded-md\">\r\n            {/* Display your post content here */}\r\n            <h2 className=\"text-xl font-bold mb-2\">{post.title}</h2>\r\n            <p className=\"text-gray-600\">{post.body}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}